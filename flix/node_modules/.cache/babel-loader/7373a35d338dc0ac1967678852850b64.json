{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Malagodi\\\\Desktop\\\\imersaoReact\\\\flix\\\\src\\\\components\\\\FormField\\\\index.js\";\nimport React from 'react';\nimport Proptypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = styled.input`\n    background: #53585D;\n    color: #F5F5F5;\n    display: block;\n    width: 100%;\n    height: 57px;\n    font-size: 18px;\n\n    outline: 0;\n    border:0 ;\n    border-top: 4px solid transparent;\n    border-bottom: 4px solid #53585D;\n    \n    padding: 16px 16px;\n    margin-bottom: 45px;\n\n    resize: none;\n    border-radius: 4px;\n    transition: border-color .3s;\n\n    &:focus{\n        border-bottom-color: var(--primary);\n    }\n    &:focus:not([type=\"color\"]) + span{\n        transform: scale(.6) translateY(-10px);// diminui a font e sobe dentro do text\n    }\n\n    ${function ({\n  hasValue\n}) {\n  return hasValue && css` //se tiver valor ele vai retornar o segundo\n            &:focus:not([type=\"color\"]) + span{\n            transform: scale(.6) translateY(-10px);// diminui a font e sobe dentro do text\n        }\n      `;\n}}\n`;\n_c = Input;\nconst Label = styled.label`\n\n`;\n_c2 = Label;\nLabel.Text = styled.span``;\nconst FormFieldWrapper = styled.div`\n\n`;\n\nfunction FormField({\n  label,\n  type,\n  name,\n  value,\n  onChange\n}) {\n  const fieldId = `id_${name}`;\n  const isTypeTextarea = type === 'textarea';\n  const tag = type === isTypeTextarea ? 'textarea' : 'input';\n  const hasValue = value.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: fieldId,\n      children: [/*#__PURE__*/_jsxDEV(Label.Text, {\n        children: [label, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        as: \"textarea\",\n        id: fieldId,\n        type: type,\n        name: name,\n        hasValue: hasValue,\n        value: value,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = FormField;\nFormField.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => {}\n};\nFormField.prototype = {\n  label: Proptypes.string.isRequired,\n  type: Proptypes.string,\n  name: Proptypes.string.isRequired,\n  value: Proptypes.string,\n  onChange: Proptypes.func\n};\nexport default FormField;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"FormField\");","map":{"version":3,"sources":["C:/Users/Malagodi/Desktop/imersaoReact/flix/src/components/FormField/index.js"],"names":["React","Proptypes","styled","css","Input","input","hasValue","Label","label","Text","span","FormFieldWrapper","div","FormField","type","name","value","onChange","fieldId","isTypeTextarea","tag","length","defaultProps","prototype","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;;AAEA,MAAMC,KAAK,GAACF,MAAM,CAACG,KAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAS;AAACC,EAAAA;AAAD,CAAT,EAAoB;AAClB,SAAOA,QAAQ,IAAIH,GAAI;AAC/B;AACA;AACA;AACA,OAJQ;AAKH,CACJ;AACD,CAnCA;KAAMC,K;AAoCN,MAAMG,KAAK,GAAGL,MAAM,CAACM,KAAM;AAC3B;AACA,CAFA;MAAMD,K;AAGNA,KAAK,CAACE,IAAN,GAAaP,MAAM,CAACQ,IAAK,EAAzB;AAEA,MAAMC,gBAAgB,GAAGT,MAAM,CAACU,GAAI;AACpC;AACA,CAFA;;AAIA,SAASC,SAAT,CAAmB;AAACL,EAAAA,KAAD;AAAQM,EAAAA,IAAR;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,KAApB;AAA2BC,EAAAA;AAA3B,CAAnB,EAAwD;AACpD,QAAMC,OAAO,GAAI,MAAKH,IAAK,EAA3B;AACA,QAAMI,cAAc,GAAGL,IAAI,KAAK,UAAhC;AACA,QAAMM,GAAG,GAAGN,IAAI,KAAKK,cAAT,GAA0B,UAA1B,GAAuC,OAAnD;AACA,QAAMb,QAAQ,GAAGU,KAAK,CAACK,MAAvB;AACA,sBACI;AAAA,2BACI,QAAC,KAAD;AACI,MAAA,OAAO,EAAEH,OADb;AAAA,8BAGI,QAAC,KAAD,CAAO,IAAP;AAAA,mBACKV,KADL;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAMI,QAAC,KAAD;AACI,QAAA,EAAE,EAAC,UADP;AAEI,QAAA,EAAE,EAAEU,OAFR;AAGI,QAAA,IAAI,EAAEJ,IAHV;AAII,QAAA,IAAI,EAAEC,IAJV;AAKI,QAAA,QAAQ,EAAET,QALd;AAMI,QAAA,KAAK,EAAEU,KANX;AAOI,QAAA,QAAQ,EAAEC;AAPd;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;MAzBQJ,S;AA0BTA,SAAS,CAACS,YAAV,GAAuB;AACnBR,EAAAA,IAAI,EAAE,MADa;AAEnBE,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,QAAQ,EAAE,MAAK,CAAE;AAHE,CAAvB;AAMAJ,SAAS,CAACU,SAAV,GAAoB;AAChBf,EAAAA,KAAK,EAAEP,SAAS,CAACuB,MAAV,CAAiBC,UADR;AAEhBX,EAAAA,IAAI,EAAEb,SAAS,CAACuB,MAFA;AAGhBT,EAAAA,IAAI,EAAEd,SAAS,CAACuB,MAAV,CAAiBC,UAHP;AAIhBT,EAAAA,KAAK,EAAEf,SAAS,CAACuB,MAJD;AAKhBP,EAAAA,QAAQ,EAAEhB,SAAS,CAACyB;AALJ,CAApB;AAOA,eAAeb,SAAf","sourcesContent":["import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport styled, {css} from 'styled-components';\r\n\r\nconst Input=styled.input`\r\n    background: #53585D;\r\n    color: #F5F5F5;\r\n    display: block;\r\n    width: 100%;\r\n    height: 57px;\r\n    font-size: 18px;\r\n\r\n    outline: 0;\r\n    border:0 ;\r\n    border-top: 4px solid transparent;\r\n    border-bottom: 4px solid #53585D;\r\n    \r\n    padding: 16px 16px;\r\n    margin-bottom: 45px;\r\n\r\n    resize: none;\r\n    border-radius: 4px;\r\n    transition: border-color .3s;\r\n\r\n    &:focus{\r\n        border-bottom-color: var(--primary);\r\n    }\r\n    &:focus:not([type=\"color\"]) + span{\r\n        transform: scale(.6) translateY(-10px);// diminui a font e sobe dentro do text\r\n    }\r\n\r\n    ${function({hasValue}){        \r\n        return hasValue && css` //se tiver valor ele vai retornar o segundo\r\n            &:focus:not([type=\"color\"]) + span{\r\n            transform: scale(.6) translateY(-10px);// diminui a font e sobe dentro do text\r\n        }\r\n      `;       \r\n    }\r\n}\r\n`;\r\nconst Label = styled.label`\r\n\r\n`;\r\nLabel.Text = styled.span``;\r\n\r\nconst FormFieldWrapper = styled.div`\r\n\r\n`;\r\n\r\nfunction FormField({label, type, name, value, onChange}){\r\n    const fieldId = `id_${name}`;\r\n    const isTypeTextarea = type === 'textarea';\r\n    const tag = type === isTypeTextarea ? 'textarea' : 'input';\r\n    const hasValue = value.length;\r\n    return(\r\n        <div>\r\n            <Label\r\n                htmlFor={fieldId}\r\n            >\r\n                <Label.Text>\r\n                    {label}:\r\n                </Label.Text>                \r\n                <Input\r\n                    as=\"textarea\"\r\n                    id={fieldId}\r\n                    type={type}\r\n                    name={name}\r\n                    hasValue={hasValue}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />    \r\n            </Label>\r\n        </div>\r\n    )\r\n}\r\nFormField.defaultProps={\r\n    type: 'text',\r\n    value: '',\r\n    onChange: () =>{},\r\n};\r\n\r\nFormField.prototype={\r\n    label: Proptypes.string.isRequired, \r\n    type: Proptypes.string, \r\n    name: Proptypes.string.isRequired, \r\n    value: Proptypes.string, \r\n    onChange: Proptypes.func,\r\n};\r\nexport default FormField;"]},"metadata":{},"sourceType":"module"}